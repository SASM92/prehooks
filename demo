#!/usr/bin/env bash
# Reasoning behind strict bashing http://redsymbol.net/articles/unofficial-bash-strict-mode/

set -euo pipefail
readonly IFS=$'\n\t'

# MYCONST='blah'

# Colours
readonly RED='\033[0;31m'
readonly ORANGE='\033[0;33m'
readonly GREEN='\033[0;32m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m' # No-colour

# File size limits
readonly MAXSIZE=2000000 # 2mb
readonly MAXSIZE_mb=$((MAXSIZE / 1000000))

# Functions
function print_error(){
    echo -e "[ ${RED}FAIL${NC} ] $1" && exit 1
}

function print_warning(){
    echo -e "[ ${ORANGE}WARN${NC} ] $1"
}

function print_pass(){
    echo -e "[ ${GREEN}PASS${NC} ] $1"
}

function print_info(){
    echo -e "[ ${CYAN}INFO${NC} ] $1"
}

# Check file sizes and unstage any files too big
print_info "Maxiumum file size is ${MAXSIZE_mb}mb"
for file in $(git diff --cached --name-only --diff-filter=AM); do
	# Check file size
	size_bytes=$(wc -c <"$file")
	size_mb=$((size_bytes / 1000000))
	print_info "${file}: file size is ${size_mb}mb"
	if [ "$size_bytes" -gt "$MAXSIZE" ]
	then 
		print_warning "${file}: File size is too big, unstaging file"
		git reset HEAD "$file"
		print_info "Track this file with LFS"
		print_info "https://www.atlassian.com/git/tutorials/git-lfs"
		continue 
	fi
done
